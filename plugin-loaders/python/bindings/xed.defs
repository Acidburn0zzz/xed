;; -*- scheme -*-
; object definitions ...
(define-object App
  (in-module "Xed")
  (parent "GObject")
  (c-name "XedApp")
  (gtype-id "XED_TYPE_APP")
)

(define-object Document
  (in-module "Xed")
  (parent "GtkSourceBuffer")
  (c-name "XedDocument")
  (gtype-id "XED_TYPE_DOCUMENT")
)

(define-object Message
  (in-module "Xed")
  (parent "GObject")
  (c-name "XedMessage")
  (gtype-id "XED_TYPE_MESSAGE")
)

(define-object MessageBus
  (in-module "Xed")
  (parent "GObject")
  (c-name "XedMessageBus")
  (gtype-id "XED_TYPE_MESSAGE_BUS")
)

(define-object Panel
  (in-module "Xed")
  (parent "GtkVBox")
  (c-name "XedPanel")
  (gtype-id "XED_TYPE_PANEL")
)

(define-object __Plugin
  (in-module "Xed")
  (parent "GObject")
  (c-name "XedPlugin")
  (gtype-id "XED_TYPE_PLUGIN")
)

(define-object Plugin
  (in-module "Xed")
  (parent "XedPlugin")
  (c-name "XedPluginPython")
  (gtype-id "XED_TYPE_PLUGIN_PYTHON")
)

(define-object Statusbar
  (in-module "Xed")
  (parent "GtkStatusbar")
  (c-name "XedStatusbar")
  (gtype-id "XED_TYPE_STATUSBAR")
)

(define-object Tab
  (in-module "Xed")
  (parent "GtkVBox")
  (c-name "XedTab")
  (gtype-id "XED_TYPE_TAB")
)

(define-object View
  (in-module "Xed")
  (parent "GtkSourceView")
  (c-name "XedView")
  (gtype-id "XED_TYPE_VIEW")
)

(define-object Window
  (in-module "Xed")
  (parent "GtkWindow")
  (c-name "XedWindow")
  (gtype-id "XED_TYPE_WINDOW")
)

;; Enumerations and flags ...

(define-flags SearchFlags
  (in-module "Xed")
  (c-name "XedSearchFlags")
  (gtype-id "XED_TYPE_SEARCH_FLAGS")
  (values
    '("dont-set-flags" "XED_SEARCH_DONT_SET_FLAGS")
    '("entire-word" "XED_SEARCH_ENTIRE_WORD")
    '("case-sensitive" "XED_SEARCH_CASE_SENSITIVE")
  )
)

(define-flags DocumentSaveFlags
  (in-module "Xed")
  (c-name "XedDocumentSaveFlags")
  (gtype-id "XED_TYPE_DOCUMENT_SAVE_FLAGS")
  (values
    '("ignore-mtime" "XED_DOCUMENT_SAVE_IGNORE_MTIME")
    '("ignore-backup" "XED_DOCUMENT_SAVE_IGNORE_BACKUP")
    '("preserve-backup" "XED_DOCUMENT_SAVE_PRESERVE_BACKUP")
  )
)

(define-enum TabState
  (in-module "Xed")
  (c-name "XedTabState")
  (gtype-id "XED_TYPE_TAB_STATE")
  (values
    '("normal" "XED_TAB_STATE_NORMAL")
    '("loading" "XED_TAB_STATE_LOADING")
    '("reverting" "XED_TAB_STATE_REVERTING")
    '("saving" "XED_TAB_STATE_SAVING")
    '("printing" "XED_TAB_STATE_PRINTING")
    '("print-previewing" "XED_TAB_STATE_PRINT_PREVIEWING")
    '("showing-print-preview" "XED_TAB_STATE_SHOWING_PRINT_PREVIEW")
    '("generic-not-editable" "XED_TAB_STATE_GENERIC_NOT_EDITABLE")
    '("loading-error" "XED_TAB_STATE_LOADING_ERROR")
    '("reverting-error" "XED_TAB_STATE_REVERTING_ERROR")
    '("saving-error" "XED_TAB_STATE_SAVING_ERROR")
    '("generic-error" "XED_TAB_STATE_GENERIC_ERROR")
    '("closing" "XED_TAB_STATE_CLOSING")
  )
)

(define-flags WindowState
  (in-module "Xed")
  (c-name "XedWindowState")
  (gtype-id "XED_TYPE_WINDOW_STATE")
  (values
    '("normal" "XED_WINDOW_STATE_NORMAL")
    '("saving" "XED_WINDOW_STATE_SAVING")
    '("printing" "XED_WINDOW_STATE_PRINTING")
    '("loading" "XED_WINDOW_STATE_LOADING")
    '("error" "XED_WINDOW_STATE_ERROR")
    '("saving-session" "XED_WINDOW_STATE_SAVING_SESSION")    
  )
)

;; Boxed types
(define-boxed Encoding
  (in-module "Xed")
  (c-name "XedEncoding")
  (gtype-id "XED_TYPE_ENCODING")
  (copy-func "xed_encoding_copy")
  (release-func "xed_encoding_free")
;;  (fields
;;    '("gint" "index")
;;    '("gchar*" "charset")
;;    '("gchar*" "name")
;;  )
)

(define-boxed MessageType
  (in-module "Xed")
  (c-name "XedMessageType")
  (gtype-id "XED_TYPE_MESSAGE_TYPE")
  (copy-func "xed_message_type_ref")
  (release-func "xed_message_type_unref")
)


;; From ../../xed/xed-app.h

(define-function xed_app_get_type
  (c-name "xed_app_get_type")
  (return-type "GType")
)

(define-function app_get_default
  (c-name "xed_app_get_default")
  (return-type "XedApp*")
)

; deprecated version !
(define-function xed_app_get_default
  (c-name "xed_app_get_default_deprecated")
  (return-type "XedApp*")
)

(define-method create_window
  (of-object "XedApp")
  (c-name "xed_app_create_window")
  (return-type "XedWindow*")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method get_windows
  (of-object "XedApp")
  (c-name "xed_app_get_windows")
  (return-type "const-GList*")
)

(define-method get_active_window
  (of-object "XedApp")
  (c-name "xed_app_get_active_window")
  (return-type "XedWindow*")
)

(define-method get_documents
  (of-object "XedApp")
  (c-name "xed_app_get_documents")
  (return-type "GList*")
)

(define-method get_views
  (of-object "XedApp")
  (c-name "xed_app_get_views")
  (return-type "GList*")
)


;; From ../../xed/xed-document.h

(define-function document_error_quark
  (c-name "xed_document_error_quark")
  (return-type "GQuark")
)

(define-function xed_document_get_type
  (c-name "xed_document_get_type")
  (return-type "GType")
)

(define-function xed_document_new
  (c-name "xed_document_new")
  (is-constructor-of "XedDocument")
  (return-type "XedDocument*")
)

(define-method get_location
  (of-object "XedDocument")
  (c-name "xed_document_get_location")
  (return-type "GFile*")
)

(define-method get_uri
  (of-object "XedDocument")
  (c-name "xed_document_get_uri")
  (return-type "gchar*")
)

(define-method set_uri
  (of-object "XedDocument")
  (c-name "xed_document_set_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method get_uri_for_display
  (of-object "XedDocument")
  (c-name "xed_document_get_uri_for_display")
  (return-type "gchar*")
)

(define-method get_short_name_for_display
  (of-object "XedDocument")
  (c-name "xed_document_get_short_name_for_display")
  (return-type "gchar*")
)

(define-method get_content_type
  (of-object "XedDocument")
  (c-name "xed_document_get_content_type")
  (return-type "gchar*")
)

(define-method get_mime_type
  (of-object "XedDocument")
  (c-name "xed_document_get_mime_type")
  (return-type "gchar*")
)

(define-method get_readonly
  (of-object "XedDocument")
  (c-name "xed_document_get_readonly")
  (return-type "gboolean")
)

(define-method load
  (of-object "XedDocument")
  (c-name "xed_document_load")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
    '("const-XedEncoding*" "encoding")
    '("gint" "line_pos")
    '("gboolean" "create")
  )
)

(define-method insert_file
  (of-object "XedDocument")
  (c-name "xed_document_insert_file")
  (return-type "gboolean")
  (parameters
    '("GtkTextIter*" "iter")
    '("const-gchar*" "uri")
    '("const-XedEncoding*" "encoding")
  )
)

(define-method load_cancel
  (of-object "XedDocument")
  (c-name "xed_document_load_cancel")
  (return-type "gboolean")
)

(define-method save
  (of-object "XedDocument")
  (c-name "xed_document_save")
  (parameters
    '("XedDocumentSaveFlags" "flags")
  )
  (return-type "none")
)

(define-method save_as
  (of-object "XedDocument")
  (c-name "xed_document_save_as")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
    '("const-XedEncoding*" "encoding")
    '("XedDocumentSaveFlags" "flags")
  )
)

(define-method is_untouched
  (of-object "XedDocument")
  (c-name "xed_document_is_untouched")
  (return-type "gboolean")
)

(define-method is_untitled
  (of-object "XedDocument")
  (c-name "xed_document_is_untitled")
  (return-type "gboolean")
)

(define-method is_local
  (of-object "XedDocument")
  (c-name "xed_document_is_local")
  (return-type "gboolean")
)

(define-method get_deleted
  (of-object "XedDocument")
  (c-name "xed_document_get_deleted")
  (return-type "gboolean")
)

(define-method goto_line
  (of-object "XedDocument")
  (c-name "xed_document_goto_line")
  (return-type "gboolean")
  (parameters
    '("gint" "line")
  )
)

(define-method set_search_text
  (of-object "XedDocument")
  (c-name "xed_document_set_search_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
    '("guint" "flags")
  )
)

(define-method get_search_text
  (of-object "XedDocument")
  (c-name "xed_document_get_search_text")
  (return-type "gchar*")
  (parameters
    '("guint*" "flags")
  )
)

(define-method get_can_search_again
  (of-object "XedDocument")
  (c-name "xed_document_get_can_search_again")
  (return-type "gboolean")
)

(define-method search_forward
  (of-object "XedDocument")
  (c-name "xed_document_search_forward")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
  )
)

(define-method replace_all
  (of-object "XedDocument")
  (c-name "xed_document_replace_all")
  (return-type "gint")
  (parameters
    '("const-gchar*" "find")
    '("const-gchar*" "replace")
    '("guint" "flags")
  )
)

(define-method search_backward
  (of-object "XedDocument")
  (c-name "xed_document_search_backward")
  (return-type "gboolean")
  (parameters
    '("const-GtkTextIter*" "start")
    '("const-GtkTextIter*" "end")
    '("GtkTextIter*" "match_start")
    '("GtkTextIter*" "match_end")
  )
)

(define-method set_language
  (of-object "XedDocument")
  (c-name "xed_document_set_language")
  (return-type "none")
  (parameters
    '("GtkSourceLanguage*" "lang" (null-ok))
  )
)

(define-method get_language
  (of-object "XedDocument")
  (c-name "xed_document_get_language")
  (return-type "GtkSourceLanguage*")
)

(define-method get_encoding
  (of-object "XedDocument")
  (c-name "xed_document_get_encoding")
  (return-type "const-XedEncoding*")
)

(define-method set_enable_search_highlighting
  (of-object "XedDocument")
  (c-name "xed_document_set_enable_search_highlighting")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_enable_search_highlighting
  (of-object "XedDocument")
  (c-name "xed_document_get_enable_search_highlighting")
  (return-type "gboolean")
)

;; From ../../xed/xed-encodings.h

(define-function xed_encoding_get_type
  (c-name "xed_encoding_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "XedEncoding")
  (c-name "xed_encoding_copy")
  (return-type "XedEncoding*")
)

(define-method free
  (of-object "XedEncoding")
  (c-name "xed_encoding_free")
  (return-type "none")
)

(define-function encoding_get_from_charset
  (c-name "xed_encoding_get_from_charset")
  (return-type "const-XedEncoding*")
  (parameters
    '("const-gchar*" "charset")
  )
)

; Deprecated version !
(define-function xed_encoding_get_from_charset
  (c-name "xed_encoding_get_from_charset_deprecated")
  (return-type "const-XedEncoding*")
  (parameters
    '("const-gchar*" "charset")
  )
)

(define-function encoding_get_from_index
  (c-name "xed_encoding_get_from_index")
  (return-type "const-XedEncoding*")
  (parameters
    '("gint" "index")
  )
)

; Deprecated version !
(define-function xed_encoding_get_from_index
  (c-name "xed_encoding_get_from_index_deprecated")
  (return-type "const-XedEncoding*")
  (parameters
    '("gint" "index")
  )
)

(define-method to_string
  (of-object "XedEncoding")
  (c-name "xed_encoding_to_string")
  (return-type "gchar*")
)

(define-method get_name
  (of-object "XedEncoding")
  (c-name "xed_encoding_get_name")
  (return-type "const-gchar*")
)

(define-method get_charset
  (of-object "XedEncoding")
  (c-name "xed_encoding_get_charset")
  (return-type "const-gchar*")
)

(define-function encoding_get_utf8
  (c-name "xed_encoding_get_utf8")
  (return-type "const-XedEncoding*")
)

; Deprecated version !
(define-function xed_encoding_get_utf8
  (c-name "xed_encoding_get_utf8_deprecated")
  (return-type "const-XedEncoding*")
)

(define-function encoding_get_current
  (c-name "xed_encoding_get_current")
  (return-type "const-XedEncoding*")
)

; Deprecated version !
(define-function xed_encoding_get_current
  (c-name "xed_encoding_get_current_deprecated")
  (return-type "const-XedEncoding*")
)

;; From ../../xed/xed-help.h

(define-function help_display
  (c-name "xed_help_display")
  (return-type "gboolean")
  (parameters
    '("GtkWindow*" "parent")
    '("const-gchar*" "name")
    '("const-gchar*" "link_id")
  )
)



;; From ../../xed/xed-panel.h

(define-function xed_panel_get_type
  (c-name "xed_panel_get_type")
  (return-type "GType")
)

(define-function xed_panel_new
  (c-name "xed_panel_new")
  (is-constructor-of "XedPanel")
  (return-type "GtkWidget*")
)

(define-method add_item
  (of-object "XedPanel")
  (c-name "xed_panel_add_item")
  (return-type "none")
  (parameters
    '("GtkWidget*" "item")
    '("const-gchar*" "name")
    '("GtkWidget*" "image")
  )
)

(define-method add_item_with_stock_icon
  (of-object "XedPanel")
  (c-name "xed_panel_add_item_with_stock_icon")
  (return-type "none")
  (parameters
    '("GtkWidget*" "item")
    '("const-gchar*" "name")
    '("const-gchar*" "stock_id")
  )
)

(define-method remove_item
  (of-object "XedPanel")
  (c-name "xed_panel_remove_item")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "item")
  )
)

(define-method activate_item
  (of-object "XedPanel")
  (c-name "xed_panel_activate_item")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "item")
  )
)

(define-method item_is_active
  (of-object "XedPanel")
  (c-name "xed_panel_item_is_active")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "item")
  )
)

(define-method get_orientation
  (of-object "XedPanel")
  (c-name "xed_panel_get_orientation")
  (return-type "GtkOrientation")
)

(define-method get_n_items
  (of-object "XedPanel")
  (c-name "xed_panel_get_n_items")
  (return-type "gint")
)


;; From ../../xed/xed-plugin.h

(define-function xed_plugin_get_type
  (c-name "xed_plugin_get_type")
  (return-type "GType")
)

(define-method get_install_dir
  (of-object "XedPlugin")
  (c-name "xed_plugin_get_install_dir")
  (return-type "gchar*")
)

(define-method get_data_dir
  (of-object "XedPlugin")
  (c-name "xed_plugin_get_data_dir")
  (return-type "gchar*")
)

(define-method activate
  (of-object "XedPlugin")
  (c-name "xed_plugin_activate")
  (return-type "none")
  (parameters
    '("XedWindow*" "window")
  )
)

(define-method deactivate
  (of-object "XedPlugin")
  (c-name "xed_plugin_deactivate")
  (return-type "none")
  (parameters
    '("XedWindow*" "window")
  )
)

(define-method update_ui
  (of-object "XedPlugin")
  (c-name "xed_plugin_update_ui")
  (return-type "none")
  (parameters
    '("XedWindow*" "window")
  )
)

(define-method is_configurable
  (of-object "XedPlugin")
  (c-name "xed_plugin_is_configurable")
  (return-type "gboolean")
)

(define-method create_configure_dialog
  (of-object "XedPlugin")
  (c-name "xed_plugin_create_configure_dialog")
  (return-type "GtkWidget*")
)

;; From ../xed/xed-plugin-python.h

(define-function xed_plugin_python_get_type
  (c-name "xed_plugin_python_get_type")
  (return-type "GType")
)

(define-function xed_plugin_python_new
  (c-name "xed_plugin_python_new")
  (is-constructor-of "XedPluginPython")
  (return-type "XedPluginPython*")
)

;; From ../../xed/xed-status-bar.h

(define-method flash_message
  (of-object "XedStatusbar")
  (c-name "xed_statusbar_flash_message")
  (return-type "none")
  (parameters
    '("int" "context_id")
    '("const-gchar*" "message")
  )
 )

;; From ../../xed/xed-tab.h

(define-function xed_tab_get_type
  (c-name "xed_tab_get_type")
  (return-type "GType")
)

(define-method get_view
  (of-object "XedTab")
  (c-name "xed_tab_get_view")
  (return-type "XedView*")
)

(define-method get_document
  (of-object "XedTab")
  (c-name "xed_tab_get_document")
  (return-type "XedDocument*")
)

(define-function tab_get_from_document
  (c-name "xed_tab_get_from_document")
  (return-type "XedTab*")
  (parameters
    '("XedDocument*" "doc")
  )
)

; Deprecated version !
(define-function xed_tab_get_from_document
  (c-name "xed_tab_get_from_document_deprecated")
  (return-type "XedTab*")
  (parameters
    '("XedDocument*" "doc")
  )
)

(define-method get_state
  (of-object "XedTab")
  (c-name "xed_tab_get_state")
  (return-type "XedTabState")
)

(define-method set_auto_save_enabled
  (of-object "XedTab")
  (c-name "xed_tab_set_auto_save_enabled")
  (return-type "none")
  (parameters
    '("gboolean" "enable")
  )
)

(define-method get_auto_save_enabled
  (of-object "XedTab")
  (c-name "xed_tab_get_auto_save_enabled")
  (return-type "gboolean")
)

(define-method set_auto_save_interval
  (of-object "XedTab")
  (c-name "xed_tab_set_auto_save_interval")
  (return-type "none")
  (parameters
    '("gint" "interval")
  )
)

(define-method get_auto_save_interval
  (of-object "XedTab")
  (c-name "xed_tab_get_auto_save_interval")
  (return-type "gint")
)

;; From ../../xed/xed-view.h

(define-function xed_view_get_type
  (c-name "xed_view_get_type")
  (return-type "GtkType")
)

(define-function xed_view_new
  (c-name "xed_view_new")
  (is-constructor-of "XedView")
  (return-type "GtkWidget*")
  (parameters
    '("XedDocument*" "doc")
  )
)

(define-method cut_clipboard
  (of-object "XedView")
  (c-name "xed_view_cut_clipboard")
  (return-type "none")
)

(define-method copy_clipboard
  (of-object "XedView")
  (c-name "xed_view_copy_clipboard")
  (return-type "none")
)

(define-method paste_clipboard
  (of-object "XedView")
  (c-name "xed_view_paste_clipboard")
  (return-type "none")
)

(define-method delete_selection
  (of-object "XedView")
  (c-name "xed_view_delete_selection")
  (return-type "none")
)

(define-method select_all
  (of-object "XedView")
  (c-name "xed_view_select_all")
  (return-type "none")
)

(define-method scroll_to_cursor
  (of-object "XedView")
  (c-name "xed_view_scroll_to_cursor")
  (return-type "none")
)

(define-method set_font
  (of-object "XedView")
  (c-name "xed_view_set_font")
  (return-type "none")
  (parameters
    '("gboolean" "def")
    '("const-gchar*" "font_name")
  )
)



;; From ../../xed/xed-window.h

(define-function xed_window_get_type
  (c-name "xed_window_get_type")
  (return-type "GType")
)

(define-method create_tab
  (of-object "XedWindow")
  (c-name "xed_window_create_tab")
  (return-type "XedTab*")
  (parameters
    '("gboolean" "jump_to")
  )
)

(define-method create_tab_from_uri
  (of-object "XedWindow")
  (c-name "xed_window_create_tab_from_uri")
  (return-type "XedTab*")
  (parameters
    '("const-gchar*" "uri")
    '("const-XedEncoding*" "encoding" (null-ok))
    '("gint" "line_pos")
    '("gboolean" "create")
    '("gboolean" "jump_to")
  )
)

(define-method close_tab
  (of-object "XedWindow")
  (c-name "xed_window_close_tab")
  (return-type "none")
  (parameters
    '("XedTab*" "tab")
  )
)

(define-method close_tabs
  (of-object "XedWindow")
  (c-name "xed_window_close_tabs")
  (return-type "none")
  (parameters
    '("const-GList*" "tabs")
  )
)

(define-method close_all_tabs
  (of-object "XedWindow")
  (c-name "xed_window_close_all_tabs")
  (return-type "none")
)

(define-method get_active_tab
  (of-object "XedWindow")
  (c-name "xed_window_get_active_tab")
  (return-type "XedTab*")
)

(define-method set_active_tab
  (of-object "XedWindow")
  (c-name "xed_window_set_active_tab")
  (return-type "none")
  (parameters
    '("XedTab*" "tab")
  )
)

(define-method get_active_view
  (of-object "XedWindow")
  (c-name "xed_window_get_active_view")
  (return-type "XedView*")
)

(define-method get_active_document
  (of-object "XedWindow")
  (c-name "xed_window_get_active_document")
  (return-type "XedDocument*")
)

(define-method get_documents
  (of-object "XedWindow")
  (c-name "xed_window_get_documents")
  (return-type "GList*")
)

(define-method get_unsaved_documents
  (of-object "XedWindow")
  (c-name "xed_window_get_unsaved_documents")
  (return-type "GList*")
)

(define-method get_views
  (of-object "XedWindow")
  (c-name "xed_window_get_views")
  (return-type "GList*")
)

(define-method get_group
  (of-object "XedWindow")
  (c-name "xed_window_get_group")
  (return-type "GtkWindowGroup*")
)

(define-method get_side_panel
  (of-object "XedWindow")
  (c-name "xed_window_get_side_panel")
  (return-type "XedPanel*")
)

(define-method get_bottom_panel
  (of-object "XedWindow")
  (c-name "xed_window_get_bottom_panel")
  (return-type "XedPanel*")
)

(define-method get_statusbar
  (of-object "XedWindow")
  (c-name "xed_window_get_statusbar")
  (return-type "GtkWidget*")
)

(define-method get_ui_manager
  (of-object "XedWindow")
  (c-name "xed_window_get_ui_manager")
  (return-type "GtkUIManager*")
)

(define-method get_state
  (of-object "XedWindow")
  (c-name "xed_window_get_state")
  (return-type "XedWindowState")
)

(define-method get_message_bus
  (of-object "XedWindow")
  (c-name "xed_window_get_message_bus")
  (return-type "XedMessageBus*")
)

(define-method get_tab_from_uri
  (of-object "XedWindow")
  (c-name "xed_window_get_tab_from_uri")
  (return-type "XedTab*")
  (parameters
    '("const-gchar*" "uri")
  )
)

;; From xed-language-manager.h

(define-function get_language_manager
  (c-name "xed_get_language_manager")
  (return-type "GtkSourceLanguageManager*")
)

(define-function language_manager_list_languages_sorted
  (c-name "xed_language_manager_list_languages_sorted")
  (return-type "GSList*")
  (parameters
    '("GtkSourceLanguageManager*" "lm")
    '("gboolean" "include_hidden")
  )
)


;; From xed-message-bus.h

(define-function xed_message_bus_get_type
  (c-name "xed_message_bus_get_type")
  (return-type "GType")
)

(define-function message_bus_get_default
  (c-name "xed_message_bus_get_default")
  (return-type "XedMessageBus*")
)

(define-function xed_message_bus_new
  (c-name "xed_message_bus_new")
  (is-constructor-of "XedMessageBus")
  (return-type "XedMessageBus*")
)

(define-method lookup
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_lookup")
  (return-type "XedMessageType*")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
  )
)

(define-method register
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_register")
  (return-type "XedMessageType*")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("guint" "num_optional")
  )
  (varargs #t)
)

(define-method unregister
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_unregister")
  (return-type "none")
  (parameters
    '("XedMessageType*" "message_type")
  )
)

(define-method unregister_all
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_unregister_all")
  (return-type "none")
  (parameters
    '("const-gchar*" "object_path")
  )
)

(define-method is_registered
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_is_registered")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
  )
)

(define-method connect
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_connect")
  (return-type "guint")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("XedMessageCallback" "callback")
    '("gpointer" "userdata")
    '("GDestroyNotify" "destroy_data")
  )
)

(define-method disconnect
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_disconnect")
  (return-type "none")
  (parameters
    '("guint" "id")
  )
)

(define-method disconnect_by_func
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_disconnect_by_func")
  (return-type "none")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("XedMessageCallback" "callback")
    '("gpointer" "userdata")
  )
)

(define-method block
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_block")
  (return-type "none")
  (parameters
    '("guint" "id")
  )
)

(define-method block_by_func
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_block_by_func")
  (return-type "none")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("XedMessageCallback" "callback")
    '("gpointer" "userdata")
  )
)

(define-method unblock
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_unblock")
  (return-type "none")
  (parameters
    '("guint" "id")
  )
)

(define-method unblock_by_func
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_unblock_by_func")
  (return-type "none")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("XedMessageCallback" "callback")
    '("gpointer" "userdata")
  )
)

(define-method send_message
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_send_message")
  (return-type "none")
  (parameters
    '("XedMessage*" "message")
  )
)

(define-method send_message_sync
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_send_message_sync")
  (return-type "none")
  (parameters
    '("XedMessage*" "message")
  )
)

(define-method send
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_send")
  (return-type "none")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
  )
  (varargs #t)
)

(define-method send_sync
  (of-object "XedMessageBus")
  (c-name "xed_message_bus_send_sync")
  (return-type "XedMessage*")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
  )
  (varargs #t)
)


;; From xed-message-type.h

(define-function xed_message_type_get_type
  (c-name "xed_message_type_get_type")
  (return-type "GType")
)

(define-function xed_message_type_is_supported
  (c-name "xed_message_type_is_supported")
  (return-type "gboolean")
  (parameters
    '("GType" "type")
  )
)

(define-function xed_message_type_identifier
  (c-name "xed_message_type_identifier")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
  )
)

(define-function xed_message_type_new
  (c-name "xed_message_type_new")
  (is-constructor-of "XedMessageType")
  (return-type "XedMessageType*")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("guint" "num_optional")
  )
  (varargs #t)
)

(define-function xed_message_type_new_valist
  (c-name "xed_message_type_new_valist")
  (return-type "XedMessageType*")
  (parameters
    '("const-gchar*" "object_path")
    '("const-gchar*" "method")
    '("guint" "num_optional")
    '("va_list" "va_args")
  )
)

(define-method ref
  (of-object "XedMessageType")
  (c-name "xed_message_type_ref")
  (return-type "XedMessageType*")
)

(define-method unref
  (of-object "XedMessageType")
  (c-name "xed_message_type_unref")
  (return-type "none")
)

(define-method instantiate_valist
  (of-object "XedMessageType")
  (c-name "xed_message_type_instantiate_valist")
  (return-type "XedMessage*")
  (parameters
    '("va_list" "va_args")
  )
)

(define-method instantiate
  (of-object "XedMessageType")
  (c-name "xed_message_type_instantiate")
  (return-type "XedMessage*")
  (parameters
  )
  (varargs #t)
)

(define-method get_object_path
  (of-object "XedMessageType")
  (c-name "xed_message_type_get_object_path")
  (return-type "const-gchar*")
)

(define-method get_method
  (of-object "XedMessageType")
  (c-name "xed_message_type_get_method")
  (return-type "const-gchar*")
)

(define-method lookup
  (of-object "XedMessageType")
  (c-name "xed_message_type_lookup")
  (return-type "GType")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method foreach
  (of-object "XedMessageType")
  (c-name "xed_message_type_foreach")
  (return-type "none")
  (parameters
    '("XedMessageTypeForeach" "func")
    '("gpointer" "user_data")
  )
)


;; From xed-message.h

(define-function xed_message_get_type
  (c-name "xed_message_get_type")
  (return-type "GType")
)

(define-method get
  (of-object "XedMessage")
  (c-name "xed_message_get")
  (return-type "none")
  (parameters
  )
  (varargs #t)
)

(define-method get_valist
  (of-object "XedMessage")
  (c-name "xed_message_get_valist")
  (return-type "none")
  (parameters
    '("va_list" "var_args")
  )
)

(define-method get_value
  (of-object "XedMessage")
  (c-name "xed_message_get_value")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("GValue*" "value")
  )
)

(define-method set
  (of-object "XedMessage")
  (c-name "xed_message_set")
  (return-type "none")
  (parameters
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "XedMessage")
  (c-name "xed_message_set_valist")
  (return-type "none")
  (parameters
    '("va_list" "var_args")
  )
)

(define-method set_value
  (of-object "XedMessage")
  (c-name "xed_message_set_value")
  (return-type "none")
  (parameters
    '("const-gchar*" "key")
    '("GValue*" "value")
  )
)

(define-method set_valuesv
  (of-object "XedMessage")
  (c-name "xed_message_set_valuesv")
  (return-type "none")
  (parameters
    '("const-gchar**" "keys")
    '("GValue*" "values")
    '("gint" "n_values")
  )
)

(define-method get_object_path
  (of-object "XedMessage")
  (c-name "xed_message_get_object_path")
  (return-type "const-gchar*")
)

(define-method get_method
  (of-object "XedMessage")
  (c-name "xed_message_get_method")
  (return-type "const-gchar*")
)

(define-method has_key
  (of-object "XedMessage")
  (c-name "xed_message_has_key")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method get_key_type
  (of-object "XedMessage")
  (c-name "xed_message_get_key_type")
  (return-type "GType")
  (parameters
    '("const-gchar*" "key")
  )
)

(define-method validate
  (of-object "XedMessage")
  (c-name "xed_message_validate")
  (return-type "gboolean")
)


;; From ../../xed/xed-debug.h

(define-function debug
  (c-name "xed_debug")
  (parameters
    '("const-gchar*" "message")
  )
  (return-type "none")
)

